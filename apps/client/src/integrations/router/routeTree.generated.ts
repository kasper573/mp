/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/solid-router'

// Import Routes

import { Route as rootRoute } from './../../routes/~__root'

// Create Virtual Routes

const SandboxLazyImport = createFileRoute('/sandbox')()
const PlayLazyImport = createFileRoute('/play')()
const ContactLazyImport = createFileRoute('/contact')()
const AuthCallbackLazyImport = createFileRoute('/auth-callback')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SandboxLazyRoute = SandboxLazyImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../routes/~sandbox.lazy').then((d) => d.Route),
)

const PlayLazyRoute = PlayLazyImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/~play.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../routes/~contact.lazy').then((d) => d.Route),
)

const AuthCallbackLazyRoute = AuthCallbackLazyImport.update({
  id: '/auth-callback',
  path: '/auth-callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../../routes/~auth-callback.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../../routes/~index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth-callback': {
      id: '/auth-callback'
      path: '/auth-callback'
      fullPath: '/auth-callback'
      preLoaderRoute: typeof AuthCallbackLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/play': {
      id: '/play'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof PlayLazyImport
      parentRoute: typeof rootRoute
    }
    '/sandbox': {
      id: '/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof SandboxLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth-callback': typeof AuthCallbackLazyRoute
  '/contact': typeof ContactLazyRoute
  '/play': typeof PlayLazyRoute
  '/sandbox': typeof SandboxLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth-callback': typeof AuthCallbackLazyRoute
  '/contact': typeof ContactLazyRoute
  '/play': typeof PlayLazyRoute
  '/sandbox': typeof SandboxLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth-callback': typeof AuthCallbackLazyRoute
  '/contact': typeof ContactLazyRoute
  '/play': typeof PlayLazyRoute
  '/sandbox': typeof SandboxLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth-callback' | '/contact' | '/play' | '/sandbox'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth-callback' | '/contact' | '/play' | '/sandbox'
  id: '__root__' | '/' | '/auth-callback' | '/contact' | '/play' | '/sandbox'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthCallbackLazyRoute: typeof AuthCallbackLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  PlayLazyRoute: typeof PlayLazyRoute
  SandboxLazyRoute: typeof SandboxLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthCallbackLazyRoute: AuthCallbackLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  PlayLazyRoute: PlayLazyRoute,
  SandboxLazyRoute: SandboxLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/auth-callback",
        "/contact",
        "/play",
        "/sandbox"
      ]
    },
    "/": {
      "filePath": "~index.lazy.tsx"
    },
    "/auth-callback": {
      "filePath": "~auth-callback.lazy.tsx"
    },
    "/contact": {
      "filePath": "~contact.lazy.tsx"
    },
    "/play": {
      "filePath": "~play.lazy.tsx"
    },
    "/sandbox": {
      "filePath": "~sandbox.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
