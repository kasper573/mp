/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/~__root'
import { Route as SandboxImport } from './../../routes/~sandbox'
import { Route as PlayImport } from './../../routes/~play'
import { Route as ContactImport } from './../../routes/~contact'
import { Route as CharacterTesterImport } from './../../routes/~character-tester'
import { Route as AuthCallbackImport } from './../../routes/~auth-callback'
import { Route as IndexImport } from './../../routes/~index'

// Create/Update Routes

const SandboxRoute = SandboxImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => rootRoute,
} as any)

const PlayRoute = PlayImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const CharacterTesterRoute = CharacterTesterImport.update({
  id: '/character-tester',
  path: '/character-tester',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth-callback',
  path: '/auth-callback',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth-callback': {
      id: '/auth-callback'
      path: '/auth-callback'
      fullPath: '/auth-callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/character-tester': {
      id: '/character-tester'
      path: '/character-tester'
      fullPath: '/character-tester'
      preLoaderRoute: typeof CharacterTesterImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/play': {
      id: '/play'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof PlayImport
      parentRoute: typeof rootRoute
    }
    '/sandbox': {
      id: '/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof SandboxImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth-callback': typeof AuthCallbackRoute
  '/character-tester': typeof CharacterTesterRoute
  '/contact': typeof ContactRoute
  '/play': typeof PlayRoute
  '/sandbox': typeof SandboxRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth-callback': typeof AuthCallbackRoute
  '/character-tester': typeof CharacterTesterRoute
  '/contact': typeof ContactRoute
  '/play': typeof PlayRoute
  '/sandbox': typeof SandboxRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth-callback': typeof AuthCallbackRoute
  '/character-tester': typeof CharacterTesterRoute
  '/contact': typeof ContactRoute
  '/play': typeof PlayRoute
  '/sandbox': typeof SandboxRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth-callback'
    | '/character-tester'
    | '/contact'
    | '/play'
    | '/sandbox'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth-callback'
    | '/character-tester'
    | '/contact'
    | '/play'
    | '/sandbox'
  id:
    | '__root__'
    | '/'
    | '/auth-callback'
    | '/character-tester'
    | '/contact'
    | '/play'
    | '/sandbox'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  CharacterTesterRoute: typeof CharacterTesterRoute
  ContactRoute: typeof ContactRoute
  PlayRoute: typeof PlayRoute
  SandboxRoute: typeof SandboxRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  CharacterTesterRoute: CharacterTesterRoute,
  ContactRoute: ContactRoute,
  PlayRoute: PlayRoute,
  SandboxRoute: SandboxRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/auth-callback",
        "/character-tester",
        "/contact",
        "/play",
        "/sandbox"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/auth-callback": {
      "filePath": "~auth-callback.tsx"
    },
    "/character-tester": {
      "filePath": "~character-tester.tsx"
    },
    "/contact": {
      "filePath": "~contact.tsx"
    },
    "/play": {
      "filePath": "~play.tsx"
    },
    "/sandbox": {
      "filePath": "~sandbox.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
