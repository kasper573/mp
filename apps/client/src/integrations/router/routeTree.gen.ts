/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../routes/~__root'
import { Route as AuthCallbackRouteImport } from './../../routes/~auth-callback'
import { Route as LayoutRouteRouteImport } from './../../routes/~_layout/~route'
import { Route as LayoutSandboxRouteImport } from './../../routes/~_layout/~sandbox'
import { Route as LayoutPlayRouteImport } from './../../routes/~_layout/~play'
import { Route as LayoutContactRouteImport } from './../../routes/~_layout/~contact'
import { Route as LayoutActorTesterRouteImport } from './../../routes/~_layout/~actor-tester'
import { Route as LayoutIndexRouteImport } from './../../routes/~_layout/~index'
import { Route as LayoutAdminSpectatorRouteImport } from './../../routes/~_layout/~admin.spectator'

const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth-callback',
  path: '/auth-callback',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRouteRoute = LayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutSandboxRoute = LayoutSandboxRouteImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutPlayRoute = LayoutPlayRouteImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutContactRoute = LayoutContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutActorTesterRoute = LayoutActorTesterRouteImport.update({
  id: '/actor-tester',
  path: '/actor-tester',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)
const LayoutAdminSpectatorRoute = LayoutAdminSpectatorRouteImport.update({
  id: '/admin/spectator',
  path: '/admin/spectator',
  getParentRoute: () => LayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth-callback': typeof AuthCallbackRoute
  '/': typeof LayoutIndexRoute
  '/actor-tester': typeof LayoutActorTesterRoute
  '/contact': typeof LayoutContactRoute
  '/play': typeof LayoutPlayRoute
  '/sandbox': typeof LayoutSandboxRoute
  '/admin/spectator': typeof LayoutAdminSpectatorRoute
}
export interface FileRoutesByTo {
  '/auth-callback': typeof AuthCallbackRoute
  '/': typeof LayoutIndexRoute
  '/actor-tester': typeof LayoutActorTesterRoute
  '/contact': typeof LayoutContactRoute
  '/play': typeof LayoutPlayRoute
  '/sandbox': typeof LayoutSandboxRoute
  '/admin/spectator': typeof LayoutAdminSpectatorRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteRouteWithChildren
  '/auth-callback': typeof AuthCallbackRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/actor-tester': typeof LayoutActorTesterRoute
  '/_layout/contact': typeof LayoutContactRoute
  '/_layout/play': typeof LayoutPlayRoute
  '/_layout/sandbox': typeof LayoutSandboxRoute
  '/_layout/admin/spectator': typeof LayoutAdminSpectatorRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth-callback'
    | '/'
    | '/actor-tester'
    | '/contact'
    | '/play'
    | '/sandbox'
    | '/admin/spectator'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth-callback'
    | '/'
    | '/actor-tester'
    | '/contact'
    | '/play'
    | '/sandbox'
    | '/admin/spectator'
  id:
    | '__root__'
    | '/_layout'
    | '/auth-callback'
    | '/_layout/'
    | '/_layout/actor-tester'
    | '/_layout/contact'
    | '/_layout/play'
    | '/_layout/sandbox'
    | '/_layout/admin/spectator'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/auth-callback': {
      id: '/auth-callback'
      path: '/auth-callback'
      fullPath: '/auth-callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/sandbox': {
      id: '/_layout/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof LayoutSandboxRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/play': {
      id: '/_layout/play'
      path: '/play'
      fullPath: '/play'
      preLoaderRoute: typeof LayoutPlayRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/contact': {
      id: '/_layout/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutContactRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/actor-tester': {
      id: '/_layout/actor-tester'
      path: '/actor-tester'
      fullPath: '/actor-tester'
      preLoaderRoute: typeof LayoutActorTesterRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
    '/_layout/admin/spectator': {
      id: '/_layout/admin/spectator'
      path: '/admin/spectator'
      fullPath: '/admin/spectator'
      preLoaderRoute: typeof LayoutAdminSpectatorRouteImport
      parentRoute: typeof LayoutRouteRoute
    }
  }
}

interface LayoutRouteRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutActorTesterRoute: typeof LayoutActorTesterRoute
  LayoutContactRoute: typeof LayoutContactRoute
  LayoutPlayRoute: typeof LayoutPlayRoute
  LayoutSandboxRoute: typeof LayoutSandboxRoute
  LayoutAdminSpectatorRoute: typeof LayoutAdminSpectatorRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutActorTesterRoute: LayoutActorTesterRoute,
  LayoutContactRoute: LayoutContactRoute,
  LayoutPlayRoute: LayoutPlayRoute,
  LayoutSandboxRoute: LayoutSandboxRoute,
  LayoutAdminSpectatorRoute: LayoutAdminSpectatorRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
