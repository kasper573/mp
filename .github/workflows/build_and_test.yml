name: Build and Test
on: [push]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_IMAGE: ${{ github.repository }}

jobs:
  conventions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm lint
      - run: pnpm format

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm test

  build_and_deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Load production environment file into Github environment
        id: readfile
        run: echo "$(cat .env.production)" >> $GITHUB_ENV

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DIGITALOCEAN_SSH_HOST }}
          username: ${{ vars.DIGITALOCEAN_SSH_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          envs: DOCKER_IMAGE,DOCKER_REGISTRY,DOCKER_USERNAME,DOCKER_PASSWORD,MP_WS_PORT,MP_HTTP_PORT
          script: |
            echo "Hello World"
            # docker login -u $(echo $DOCKER_USERNAME) -p $(echo $DOCKER_PASSWORD) $(echo $DOCKER_REGISTRY)
            # docker stop $(echo $DOCKER_IMAGE)
            # docker rm $(echo $DOCKER_IMAGE)
            # docker run -d \
            # --publish $(echo $MP_WS_PORT):$(echo $MP_WS_PORT) \
            # --publish $(echo $MP_HTTP_PORT):$(echo $MP_HTTP_PORT) \
            # --restart always \
            # --name $(echo $DOCKER_IMAGE) \
            # $(echo $DOCKER_REGISTRY)/$(echo $DOCKER_IMAGE)
