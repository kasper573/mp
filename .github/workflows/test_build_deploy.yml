name: Test, Build, Deploy
on: [push]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  conventions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm lint
      - run: pnpm format

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm test

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/

      - name: Load production build args into environment
        run: echo "$(cat production-build-args.env)" >> $GITHUB_ENV

      - name: Build application
        run: pnpm build

      - name: Log in with Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker compose build
          docker compose push

  deploy:
    needs: [conventions, test, build]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load docker-compose file into environment
        run: echo "DOCKER_COMPOSE_BASE64=$(cat docker-compose.yaml | base64 -w 0)" >> $GITHUB_ENV

      - name: Upload custom nginx configuration files
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          REMOTE_HOST: ${{ vars.DIGITALOCEAN_SSH_HOST }}
          REMOTE_USER: ${{ vars.DIGITALOCEAN_SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          SOURCE: "nginx/"
          TARGET: "/data/nginx/custom/"

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.DIGITALOCEAN_SSH_HOST }}
          username: ${{ vars.DIGITALOCEAN_SSH_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          envs: DOCKER_REGISTRY,DOCKER_USERNAME,DOCKER_PASSWORD,DOCKER_COMPOSE_BASE64
          script_stop: true
          script: |
            cd ~
            echo $DOCKER_COMPOSE_BASE64 > base64.txt
            cat base64.txt | base64 --decode > docker-compose.yaml
            rm base64.txt
            echo $DOCKER_PASSWORD | docker login $(echo $DOCKER_REGISTRY) -u $(echo $DOCKER_USERNAME) --password-stdin
            docker compose pull
            docker compose up -d --remove-orphans
            docker compose run devtools pnpm -F server db:migrate
            docker system prune -f
            docker image prune -af
