name: Test, Build, Deploy
on: [push]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_IMAGE: ${{ github.repository }}

jobs:
  conventions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm lint
      - run: pnpm format

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/composites/install/
      - run: pnpm test

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker compose build
          docker compose push

  deploy:
    needs: [build, test, conventions]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.DIGITALOCEAN_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Docker Compose file to server
        run: scp -i ~/.ssh/id_rsa docker-compose.yml ${{ vars.DIGITALOCEAN_SSH_USERNAME }}@${{ vars.DIGITALOCEAN_SSH_HOST }}:~/

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.DIGITALOCEAN_SSH_HOST }}
          username: ${{ vars.DIGITALOCEAN_SSH_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          envs: DOCKER_REGISTRY,DOCKER_USERNAME,DOCKER_PASSWORD
          script: |
            cd ~
            echo $DOCKER_PASSWORD | docker login $(echo $DOCKER_REGISTRY) -u $(echo $DOCKER_USERNAME) --password-stdin
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
