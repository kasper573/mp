# Make sure to keep this version aligned with the version of the engine field in the root package.json
FROM node:22.12.0 AS base

FROM base AS builder
WORKDIR /workdir

# Enable pnpm
RUN corepack enable
COPY package.json .
RUN corepack prepare

# install most of node dependencies
COPY pnpm-lock.yaml .npmrc ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch

# copy source code and install any node dependencies missed by pnpm fetch
COPY . .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

ENV NODE_ENV=production
RUN pnpm -F client build

FROM nginx:alpine3.20 AS runner
WORKDIR /workdir

# Copy client build to nginx
COPY --from=builder /workdir/apps/client/dist /usr/share/nginx/html

# Install runtime env substitution script
COPY ./docker/embed-client-env.sh /docker-entrypoint.d/10-embed-client-env.sh
RUN chmod +x /docker-entrypoint.d/10-embed-client-env.sh

# Add SPA configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files \$uri /index.html;
    }

    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|wasm|eot|ttf|otf|svg|webp)\$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }
}
EOF