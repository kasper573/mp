# Make sure to keep this version aligned with the version of the engine field in the root package.json
FROM node:22.12.0-alpine3.21 AS base
WORKDIR /workdir
RUN corepack enable
COPY package.json .
RUN corepack prepare

# Note: We use pnpm deploy instead of efficient bundling via ie. esbuild.
# Anything that transpiles or bundles is off the table,
# because of opentelemetry, which heavily relies on monkey patching
# node modules at runtime. Bundling or transpiling will arbitrarily
# and silently break some opentelemetry instrumentations.
# This might be solved some day via https://github.com/open-telemetry/opentelemetry-js/issues/4174

FROM base AS builder

# install most of node dependencies
COPY pnpm-lock.yaml .npmrc ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm fetch

# copy source code and install any node dependencies missed by pnpm fetch
COPY . .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# collect the sources and dependencies required by the server app
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm -F server deploy pnpm-deploy

FROM base AS runner
RUN apk add --no-cache curl
COPY --from=builder /workdir/pnpm-deploy .
ENV MP_SERVER_PUBLIC_DIR=/workdir/public
CMD ["sh", "-c", "pnpm db migrate && pnpm start"]